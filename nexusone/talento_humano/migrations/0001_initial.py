# Generated by Django 5.2.6 on 2025-10-30 13:08

import datetime
import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AFP',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=200)),
                ('nit', models.CharField(max_length=20, unique=True)),
                ('codigo', models.CharField(max_length=20, unique=True)),
                ('porcentaje_aporte', models.DecimalField(decimal_places=2, default=16.0, max_digits=5)),
                ('activa', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'AFP',
                'verbose_name_plural': 'AFP',
                'ordering': ['nombre'],
            },
        ),
        migrations.CreateModel(
            name='ARL',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=200)),
                ('nit', models.CharField(max_length=20, unique=True)),
                ('codigo', models.CharField(max_length=20, unique=True)),
                ('activa', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'ARL',
                'verbose_name_plural': 'ARL',
                'ordering': ['nombre'],
            },
        ),
        migrations.CreateModel(
            name='CajaCompensacion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=200)),
                ('nit', models.CharField(max_length=20, unique=True)),
                ('codigo', models.CharField(max_length=20, unique=True)),
                ('porcentaje_aporte', models.DecimalField(decimal_places=2, default=4.0, max_digits=5)),
                ('activa', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Caja de Compensación',
                'verbose_name_plural': 'Cajas de Compensación',
                'ordering': ['nombre'],
            },
        ),
        migrations.CreateModel(
            name='Candidato',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombres', models.CharField(max_length=100)),
                ('apellidos', models.CharField(max_length=100)),
                ('tipo_documento', models.CharField(choices=[('CC', 'Cédula de Ciudadanía'), ('CE', 'Cédula de Extranjería'), ('PA', 'Pasaporte'), ('TI', 'Tarjeta de Identidad')], max_length=2)),
                ('numero_documento', models.CharField(max_length=20, unique=True)),
                ('email', models.EmailField(max_length=254)),
                ('celular', models.CharField(max_length=20)),
                ('ciudad', models.CharField(max_length=100)),
                ('archivo_hv', models.FileField(upload_to='candidatos/hojas_vida/')),
                ('nivel_educacion', models.CharField(max_length=100)),
                ('años_experiencia', models.PositiveIntegerField(default=0)),
                ('calificacion', models.DecimalField(blank=True, decimal_places=1, max_digits=3, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('observaciones', models.TextField(blank=True)),
                ('fecha_registro', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Candidato',
                'verbose_name_plural': 'Candidatos',
                'ordering': ['-fecha_registro'],
            },
        ),
        migrations.CreateModel(
            name='Capacitacion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=200)),
                ('tipo', models.CharField(choices=[('tecnica', 'Técnica Operativa'), ('seguridad', 'Seguridad y Salud'), ('administrativa', 'Administrativa'), ('liderazgo', 'Liderazgo'), ('servicio', 'Servicio al Cliente'), ('otra', 'Otra')], max_length=20)),
                ('descripcion', models.TextField()),
                ('objetivo', models.TextField()),
                ('fecha_programada', models.DateField()),
                ('duracion_horas', models.PositiveIntegerField()),
                ('modalidad', models.CharField(choices=[('presencial', 'Presencial'), ('virtual', 'Virtual'), ('hibrida', 'Híbrida')], max_length=20)),
                ('facilitador', models.CharField(max_length=100)),
                ('lugar', models.CharField(blank=True, max_length=200)),
                ('cupo_maximo', models.PositiveIntegerField(default=30)),
                ('costo', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('completada', models.BooleanField(default=False)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Capacitación',
                'verbose_name_plural': 'Capacitaciones',
                'ordering': ['-fecha_programada'],
            },
        ),
        migrations.CreateModel(
            name='ElementoProteccion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100)),
                ('tipo', models.CharField(choices=[('cabeza', 'Protección para la Cabeza'), ('ojos', 'Protección para los Ojos'), ('oidos', 'Protección Auditiva'), ('respiratoria', 'Protección Respiratoria'), ('manos', 'Protección para Manos'), ('pies', 'Protección para Pies'), ('cuerpo', 'Protección para el Cuerpo'), ('caidas', 'Protección contra Caídas')], max_length=20)),
                ('descripcion', models.TextField()),
                ('stock_actual', models.PositiveIntegerField(default=0)),
                ('stock_minimo', models.PositiveIntegerField(default=10)),
                ('vida_util_dias', models.PositiveIntegerField(help_text='Vida útil en días')),
                ('activo', models.BooleanField(default=True)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Elemento de Protección Personal',
                'verbose_name_plural': 'Elementos de Protección Personal',
                'ordering': ['tipo', 'nombre'],
            },
        ),
        migrations.CreateModel(
            name='EPS',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=200)),
                ('nit', models.CharField(max_length=20, unique=True)),
                ('codigo', models.CharField(max_length=20, unique=True)),
                ('porcentaje_aporte', models.DecimalField(decimal_places=2, default=12.5, max_digits=5)),
                ('activa', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'EPS',
                'verbose_name_plural': 'EPS',
                'ordering': ['nombre'],
            },
        ),
        migrations.CreateModel(
            name='PerfilCargo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_cargo', models.CharField(max_length=100)),
                ('area', models.CharField(max_length=100)),
                ('nivel_jerarquico', models.CharField(choices=[('operativo', 'Operativo'), ('coordinador', 'Coordinador'), ('jefe', 'Jefe'), ('gerente', 'Gerente'), ('director', 'Director')], max_length=50)),
                ('objetivo_cargo', models.TextField()),
                ('funciones_principales', models.TextField()),
                ('nivel_educacion', models.CharField(max_length=100)),
                ('experiencia_requerida', models.CharField(max_length=200)),
                ('conocimientos_tecnicos', models.TextField()),
                ('competencias', models.TextField()),
                ('salario_minimo', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('salario_maximo', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('tipo_contrato', models.CharField(choices=[('indefinido', 'Término Indefinido'), ('fijo', 'Término Fijo'), ('obra_labor', 'Obra o Labor'), ('aprendizaje', 'Contrato de Aprendizaje'), ('prestacion_servicios', 'Prestación de Servicios')], max_length=30)),
                ('activo', models.BooleanField(default=True)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Perfil de Cargo',
                'verbose_name_plural': 'Perfiles de Cargo',
                'ordering': ['nombre_cargo'],
            },
        ),
        migrations.CreateModel(
            name='Empleado',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo_documento', models.CharField(choices=[('CC', 'Cédula de Ciudadanía'), ('CE', 'Cédula de Extranjería'), ('PA', 'Pasaporte'), ('TI', 'Tarjeta de Identidad')], default='CC', max_length=2)),
                ('numero_documento', models.CharField(max_length=20, unique=True, verbose_name='Número de documento')),
                ('primer_nombre', models.CharField(max_length=50)),
                ('segundo_nombre', models.CharField(blank=True, max_length=50)),
                ('primer_apellido', models.CharField(max_length=50)),
                ('segundo_apellido', models.CharField(blank=True, max_length=50)),
                ('fecha_nacimiento', models.DateField(blank=True, null=True)),
                ('lugar_expedicion', models.CharField(blank=True, max_length=100)),
                ('genero', models.CharField(blank=True, choices=[('M', 'Masculino'), ('F', 'Femenino'), ('O', 'Otro')], max_length=1)),
                ('estado_civil', models.CharField(blank=True, choices=[('soltero', 'Soltero(a)'), ('casado', 'Casado(a)'), ('union_libre', 'Unión Libre'), ('divorciado', 'Divorciado(a)'), ('viudo', 'Viudo(a)')], max_length=20)),
                ('celular', models.CharField(max_length=20)),
                ('telefono_fijo', models.CharField(blank=True, max_length=20)),
                ('email_personal', models.EmailField(blank=True, max_length=254)),
                ('email_corporativo', models.EmailField(blank=True, max_length=254)),
                ('direccion', models.CharField(max_length=200)),
                ('ciudad', models.CharField(max_length=100)),
                ('barrio', models.CharField(blank=True, max_length=100)),
                ('contacto_emergencia_nombre', models.CharField(blank=True, max_length=100)),
                ('contacto_emergencia_parentesco', models.CharField(blank=True, max_length=50)),
                ('contacto_emergencia_telefono', models.CharField(blank=True, max_length=20)),
                ('fecha_ingreso', models.DateField()),
                ('cargo', models.CharField(max_length=100)),
                ('area', models.CharField(max_length=100)),
                ('sede', models.CharField(blank=True, max_length=100)),
                ('estado', models.CharField(choices=[('activo', 'Activo'), ('inactivo', 'Inactivo'), ('vacaciones', 'En Vacaciones'), ('incapacidad', 'Incapacitado'), ('suspendido', 'Suspendido')], default='activo', max_length=20)),
                ('salario_basico', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('aplica_auxilio_transporte', models.BooleanField(default=True)),
                ('salario_integral', models.BooleanField(default=False)),
                ('banco', models.CharField(blank=True, max_length=100)),
                ('tipo_cuenta', models.CharField(blank=True, choices=[('ahorros', 'Ahorros'), ('corriente', 'Corriente')], max_length=20)),
                ('numero_cuenta', models.CharField(blank=True, max_length=20)),
                ('foto', models.ImageField(blank=True, null=True, upload_to='empleados/fotos/')),
                ('observaciones', models.TextField(blank=True)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True)),
                ('afp', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='talento_humano.afp')),
                ('arl', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='talento_humano.arl')),
                ('caja_compensacion', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='talento_humano.cajacompensacion')),
                ('jefe_inmediato', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='subordinados', to='talento_humano.empleado')),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='empleado', to=settings.AUTH_USER_MODEL)),
                ('eps', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='talento_humano.eps')),
            ],
            options={
                'verbose_name': 'Empleado',
                'verbose_name_plural': 'Empleados',
                'ordering': ['-fecha_ingreso'],
            },
        ),
        migrations.CreateModel(
            name='Contrato',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_contrato', models.CharField(max_length=50, unique=True)),
                ('tipo', models.CharField(choices=[('indefinido', 'Término Indefinido'), ('fijo', 'Término Fijo'), ('obra_labor', 'Obra o Labor'), ('aprendizaje', 'Contrato de Aprendizaje'), ('prestacion_servicios', 'Prestación de Servicios')], max_length=30)),
                ('fecha_inicio', models.DateField()),
                ('fecha_fin', models.DateField(blank=True, help_text='Dejar vacío para contratos indefinidos', null=True)),
                ('salario', models.DecimalField(decimal_places=2, max_digits=12)),
                ('cargo', models.CharField(max_length=100)),
                ('descripcion_funciones', models.TextField(blank=True)),
                ('activo', models.BooleanField(default=True)),
                ('archivo', models.FileField(blank=True, null=True, upload_to='contratos/')),
                ('observaciones', models.TextField(blank=True)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True)),
                ('creado_por', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='contratos_creados', to=settings.AUTH_USER_MODEL)),
                ('empleado', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contratos', to='talento_humano.empleado')),
            ],
            options={
                'verbose_name': 'Contrato',
                'verbose_name_plural': 'Contratos',
                'ordering': ['-fecha_inicio'],
            },
        ),
        migrations.CreateModel(
            name='Certificacion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', models.CharField(choices=[('basica', 'Certificación Laboral Básica'), ('detallada', 'Certificación con Detalle Salarial'), ('bancaria', 'Certificación para Trámites Bancarios'), ('paz_salvo', 'Paz y Salvo Laboral'), ('personalizada', 'Certificación Personalizada')], max_length=20)),
                ('destinatario', models.CharField(default='A quien corresponda', max_length=200)),
                ('incluir_cargo', models.BooleanField(default=True)),
                ('incluir_fecha_ingreso', models.BooleanField(default=True)),
                ('incluir_tipo_contrato', models.BooleanField(default=True)),
                ('incluir_salario', models.BooleanField(default=True)),
                ('incluir_funciones', models.BooleanField(default=False)),
                ('incluir_prestaciones', models.BooleanField(default=False)),
                ('contenido_adicional', models.TextField(blank=True)),
                ('archivo', models.FileField(blank=True, null=True, upload_to='certificaciones/')),
                ('fecha_generacion', models.DateTimeField(auto_now_add=True)),
                ('generado_por', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('empleado', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='certificaciones', to='talento_humano.empleado')),
            ],
            options={
                'verbose_name': 'Certificación',
                'verbose_name_plural': 'Certificaciones',
                'ordering': ['-fecha_generacion'],
            },
        ),
        migrations.CreateModel(
            name='ActividadBienestar',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=200)),
                ('tipo', models.CharField(choices=[('deportiva', 'Actividad Deportiva'), ('cultural', 'Actividad Cultural'), ('recreativa', 'Actividad Recreativa'), ('celebracion', 'Celebración'), ('integracion', 'Integración'), ('salud', 'Salud y Bienestar')], max_length=20)),
                ('descripcion', models.TextField()),
                ('fecha_evento', models.DateField()),
                ('hora_inicio', models.TimeField()),
                ('hora_fin', models.TimeField(blank=True, null=True)),
                ('lugar', models.CharField(max_length=200)),
                ('cupo_maximo', models.PositiveIntegerField(blank=True, null=True)),
                ('costo', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('presupuesto', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('completada', models.BooleanField(default=False)),
                ('foto', models.ImageField(blank=True, null=True, upload_to='bienestar/actividades/')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('responsable', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('empleados_inscritos', models.ManyToManyField(blank=True, related_name='actividades_bienestar', to='talento_humano.empleado')),
            ],
            options={
                'verbose_name': 'Actividad de Bienestar',
                'verbose_name_plural': 'Actividades de Bienestar',
                'ordering': ['-fecha_evento'],
            },
        ),
        migrations.CreateModel(
            name='AccidenteTrabajo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_accidente', models.DateTimeField()),
                ('lugar', models.CharField(max_length=200)),
                ('descripcion', models.TextField()),
                ('parte_cuerpo_afectada', models.CharField(max_length=100)),
                ('severidad', models.CharField(choices=[('leve', 'Leve'), ('grave', 'Grave'), ('mortal', 'Mortal')], max_length=20)),
                ('causas_inmediatas', models.TextField(blank=True)),
                ('causas_basicas', models.TextField(blank=True)),
                ('acciones_correctivas', models.TextField(blank=True)),
                ('dias_incapacidad', models.PositiveIntegerField(default=0)),
                ('reportado_arl', models.BooleanField(default=False)),
                ('fecha_reporte_arl', models.DateField(blank=True, null=True)),
                ('fecha_investigacion', models.DateField(blank=True, null=True)),
                ('archivo', models.FileField(blank=True, null=True, upload_to='sst/accidentes/')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('investigado_por', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('empleado', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='accidentes', to='talento_humano.empleado')),
            ],
            options={
                'verbose_name': 'Accidente de Trabajo',
                'verbose_name_plural': 'Accidentes de Trabajo',
                'ordering': ['-fecha_accidente'],
            },
        ),
        migrations.CreateModel(
            name='EncuestaClimaOrganizacional',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=200)),
                ('descripcion', models.TextField()),
                ('fecha_inicio', models.DateField()),
                ('fecha_fin', models.DateField()),
                ('activa', models.BooleanField(default=True)),
                ('anonima', models.BooleanField(default=True)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('creada_por', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Encuesta de Clima',
                'verbose_name_plural': 'Encuestas de Clima',
                'ordering': ['-fecha_inicio'],
            },
        ),
        migrations.CreateModel(
            name='EntregaEPP',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cantidad', models.PositiveIntegerField(default=1)),
                ('fecha_entrega', models.DateField(default=datetime.date.today)),
                ('fecha_vencimiento', models.DateField()),
                ('firma_empleado', models.ImageField(blank=True, null=True, upload_to='sst/firmas_epp/')),
                ('observaciones', models.TextField(blank=True)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('elemento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='entregas', to='talento_humano.elementoproteccion')),
                ('empleado', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='entregas_epp', to='talento_humano.empleado')),
                ('entregado_por', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Entrega de EPP',
                'verbose_name_plural': 'Entregas de EPP',
                'ordering': ['-fecha_entrega'],
            },
        ),
        migrations.CreateModel(
            name='EvaluacionDesempeño',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('periodo', models.CharField(choices=[('mensual', 'Mensual'), ('trimestral', 'Trimestral'), ('semestral', 'Semestral'), ('anual', 'Anual')], max_length=20)),
                ('fecha_evaluacion', models.DateField()),
                ('calidad_trabajo', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('productividad', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('conocimiento_tecnico', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('trabajo_equipo', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('iniciativa', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('puntualidad', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('calificacion_promedio', models.DecimalField(decimal_places=2, editable=False, max_digits=3)),
                ('fortalezas', models.TextField()),
                ('areas_mejora', models.TextField()),
                ('plan_desarrollo', models.TextField(blank=True)),
                ('observaciones', models.TextField(blank=True)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('empleado', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='evaluaciones', to='talento_humano.empleado')),
                ('evaluador', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='evaluaciones_realizadas', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Evaluación de Desempeño',
                'verbose_name_plural': 'Evaluaciones de Desempeño',
                'ordering': ['-fecha_evaluacion'],
            },
        ),
        migrations.CreateModel(
            name='ExamenMedico',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', models.CharField(choices=[('ingreso', 'Examen de Ingreso'), ('periodico', 'Examen Periódico'), ('retiro', 'Examen de Retiro'), ('reintegro', 'Examen de Reintegro')], max_length=20)),
                ('fecha', models.DateField()),
                ('resultado', models.CharField(blank=True, choices=[('apto', 'Apto'), ('apto_condiciones', 'Apto con Condiciones'), ('no_apto', 'No Apto')], max_length=20)),
                ('ips_realizadora', models.CharField(max_length=200)),
                ('medico_responsable', models.CharField(max_length=100)),
                ('observaciones', models.TextField(blank=True)),
                ('recomendaciones', models.TextField(blank=True)),
                ('archivo', models.FileField(blank=True, null=True, upload_to='sst/examenes_medicos/')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('empleado', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='examenes_medicos', to='talento_humano.empleado')),
            ],
            options={
                'verbose_name': 'Examen Médico',
                'verbose_name_plural': 'Exámenes Médicos',
                'ordering': ['-fecha'],
            },
        ),
        migrations.CreateModel(
            name='Incapacidad',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', models.CharField(choices=[('enfermedad_general', 'Enfermedad General (EPS)'), ('accidente_trabajo', 'Accidente de Trabajo (ARL)'), ('enfermedad_laboral', 'Enfermedad Laboral (ARL)'), ('maternidad', 'Licencia de Maternidad')], max_length=30)),
                ('fecha_inicio', models.DateField()),
                ('fecha_fin', models.DateField()),
                ('dias_incapacidad', models.PositiveIntegerField()),
                ('numero_radicado', models.CharField(blank=True, max_length=50)),
                ('entidad_responsable', models.CharField(help_text='EPS o ARL responsable del pago', max_length=100)),
                ('diagnostico', models.TextField()),
                ('archivo_incapacidad', models.FileField(upload_to='incapacidades/')),
                ('observaciones', models.TextField(blank=True)),
                ('fecha_registro', models.DateTimeField(auto_now_add=True)),
                ('empleado', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='incapacidades', to='talento_humano.empleado')),
            ],
            options={
                'verbose_name': 'Incapacidad',
                'verbose_name_plural': 'Incapacidades',
                'ordering': ['-fecha_inicio'],
            },
        ),
        migrations.CreateModel(
            name='InscripcionCapacitacion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_inscripcion', models.DateTimeField(auto_now_add=True)),
                ('asistio', models.BooleanField(default=False)),
                ('calificacion', models.DecimalField(blank=True, decimal_places=1, max_digits=3, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('certificado', models.FileField(blank=True, null=True, upload_to='capacitaciones/certificados/')),
                ('observaciones', models.TextField(blank=True)),
                ('capacitacion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='talento_humano.capacitacion')),
                ('empleado', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='talento_humano.empleado')),
            ],
            options={
                'verbose_name': 'Inscripción a Capacitación',
                'verbose_name_plural': 'Inscripciones a Capacitaciones',
                'unique_together': {('empleado', 'capacitacion')},
            },
        ),
        migrations.AddField(
            model_name='capacitacion',
            name='empleados',
            field=models.ManyToManyField(related_name='capacitaciones', through='talento_humano.InscripcionCapacitacion', to='talento_humano.empleado'),
        ),
        migrations.CreateModel(
            name='MatrizRiesgo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('proceso', models.CharField(max_length=100)),
                ('actividad', models.CharField(max_length=200)),
                ('peligro_identificado', models.TextField()),
                ('tipo_peligro', models.CharField(max_length=100)),
                ('efectos_posibles', models.TextField()),
                ('controles_existentes', models.TextField()),
                ('nivel_riesgo', models.CharField(choices=[('bajo', 'Bajo'), ('medio', 'Medio'), ('alto', 'Alto'), ('muy_alto', 'Muy Alto')], max_length=20)),
                ('controles_recomendados', models.TextField()),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True)),
                ('responsable', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Matriz de Riesgo',
                'verbose_name_plural': 'Matriz de Riesgos',
                'ordering': ['proceso', 'actividad'],
            },
        ),
        migrations.CreateModel(
            name='Memorando',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', models.CharField(choices=[('verbal', 'Llamado de Atención Verbal'), ('escrito', 'Llamado de Atención Escrito'), ('memorando', 'Memorando'), ('suspension', 'Suspensión')], max_length=20)),
                ('fecha', models.DateField(default=datetime.date.today)),
                ('asunto', models.CharField(max_length=200)),
                ('descripcion_hechos', models.TextField()),
                ('archivo', models.FileField(blank=True, null=True, upload_to='memorandos/')),
                ('observaciones', models.TextField(blank=True)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('emitido_por', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('empleado', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='memorandos', to='talento_humano.empleado')),
            ],
            options={
                'verbose_name': 'Memorando',
                'verbose_name_plural': 'Memorandos y Llamados de Atención',
                'ordering': ['-fecha'],
            },
        ),
        migrations.CreateModel(
            name='Permiso',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', models.CharField(choices=[('personal', 'Permiso Personal'), ('medico', 'Permiso Médico'), ('calamidad', 'Calamidad Doméstica'), ('luto', 'Luto'), ('estudio', 'Estudio'), ('matrimonio', 'Matrimonio'), ('paternidad', 'Licencia de Paternidad'), ('maternidad', 'Licencia de Maternidad'), ('otro', 'Otro')], max_length=20)),
                ('fecha_inicio', models.DateField()),
                ('fecha_fin', models.DateField()),
                ('motivo', models.TextField()),
                ('con_goce_sueldo', models.BooleanField(default=True)),
                ('aprobado', models.BooleanField(default=False)),
                ('fecha_aprobacion', models.DateTimeField(blank=True, null=True)),
                ('documento_soporte', models.FileField(blank=True, null=True, upload_to='permisos/')),
                ('observaciones', models.TextField(blank=True)),
                ('fecha_solicitud', models.DateTimeField(auto_now_add=True)),
                ('aprobado_por', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='permisos_aprobados', to=settings.AUTH_USER_MODEL)),
                ('empleado', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='permisos', to='talento_humano.empleado')),
            ],
            options={
                'verbose_name': 'Permiso',
                'verbose_name_plural': 'Permisos',
                'ordering': ['-fecha_solicitud'],
            },
        ),
        migrations.CreateModel(
            name='ReglamentoInterno',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=200)),
                ('descripcion', models.TextField()),
                ('version', models.CharField(max_length=20)),
                ('archivo', models.FileField(upload_to='reglamentos/')),
                ('fecha_vigencia', models.DateField()),
                ('activo', models.BooleanField(default=True)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('creado_por', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Reglamento Interno',
                'verbose_name_plural': 'Reglamentos Internos',
                'ordering': ['-fecha_vigencia'],
            },
        ),
        migrations.CreateModel(
            name='RespuestaEncuesta',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('calificacion_general', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('liderazgo', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('comunicacion', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('trabajo_equipo', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('condiciones_trabajo', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('reconocimiento', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('desarrollo', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('comentarios', models.TextField(blank=True)),
                ('sugerencias', models.TextField(blank=True)),
                ('fecha_respuesta', models.DateTimeField(auto_now_add=True)),
                ('empleado', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='talento_humano.empleado')),
                ('encuesta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='respuestas', to='talento_humano.encuestaclimaorganizacional')),
            ],
            options={
                'verbose_name': 'Respuesta a Encuesta',
                'verbose_name_plural': 'Respuestas a Encuestas',
                'ordering': ['-fecha_respuesta'],
            },
        ),
        migrations.CreateModel(
            name='Vacacion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_inicio', models.DateField()),
                ('fecha_fin', models.DateField()),
                ('dias_habiles', models.PositiveIntegerField()),
                ('aprobada', models.BooleanField(default=False)),
                ('fecha_aprobacion', models.DateTimeField(blank=True, null=True)),
                ('observaciones', models.TextField(blank=True)),
                ('fecha_solicitud', models.DateTimeField(auto_now_add=True)),
                ('aprobada_por', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='vacaciones_aprobadas', to=settings.AUTH_USER_MODEL)),
                ('empleado', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vacaciones', to='talento_humano.empleado')),
            ],
            options={
                'verbose_name': 'Vacación',
                'verbose_name_plural': 'Vacaciones',
                'ordering': ['-fecha_solicitud'],
            },
        ),
        migrations.CreateModel(
            name='Vacante',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=200)),
                ('descripcion', models.TextField()),
                ('numero_vacantes', models.PositiveIntegerField(default=1)),
                ('fecha_apertura', models.DateField(default=datetime.date.today)),
                ('fecha_cierre', models.DateField()),
                ('estado', models.CharField(choices=[('abierta', 'Abierta'), ('en_proceso', 'En Proceso'), ('cerrada', 'Cerrada'), ('cancelada', 'Cancelada')], default='abierta', max_length=20)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('perfil_cargo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vacantes', to='talento_humano.perfilcargo')),
                ('responsable', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='vacantes_responsable', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Vacante',
                'verbose_name_plural': 'Vacantes',
                'ordering': ['-fecha_apertura'],
            },
        ),
        migrations.CreateModel(
            name='ProcesoSeleccion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('etapa_actual', models.CharField(choices=[('recibida', 'Hoja de Vida Recibida'), ('preseleccionado', 'Preseleccionado'), ('entrevista', 'Entrevista'), ('pruebas', 'Pruebas Técnicas/Psicotécnicas'), ('referencias', 'Verificación de Referencias'), ('oferta', 'Oferta Laboral'), ('contratado', 'Contratado'), ('rechazado', 'Rechazado')], default='recibida', max_length=20)),
                ('fecha_aplicacion', models.DateTimeField(auto_now_add=True)),
                ('calificacion_entrevista', models.DecimalField(blank=True, decimal_places=1, max_digits=3, null=True)),
                ('calificacion_pruebas', models.DecimalField(blank=True, decimal_places=1, max_digits=3, null=True)),
                ('observaciones', models.TextField(blank=True)),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True)),
                ('candidato', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='procesos', to='talento_humano.candidato')),
                ('vacante', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='procesos', to='talento_humano.vacante')),
            ],
            options={
                'verbose_name': 'Proceso de Selección',
                'verbose_name_plural': 'Procesos de Selección',
                'ordering': ['-fecha_aplicacion'],
                'unique_together': {('vacante', 'candidato')},
            },
        ),
    ]
